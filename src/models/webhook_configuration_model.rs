/*
 * PedidosYa Courier API
 *
 * PedidosYa Courier API allows developers to build applications that automates the use of PedidosYa's logistics network. Through this it's possible to ship packages from a pickup point to a dropoff point.  To start using the PedidosYa Courier API you need to Generate an Authentication Token. You could get information about this [here](https://developers.pedidosya.com/courier-doc/first-steps#generate-token). All endpoints require an authorization header with a token value. The content of the header should look like the following: 'Authorization: token' <br> <br>
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// WebhooksConfigModel : Webhooks Config Schema to set url for receiving news about shipping orders.  The endpoint will look like: https://your_callback_url/ Header authorization: your_security_key (optional) Topics to be subscribed.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
#[serde(deny_unknown_fields)]
pub struct WebhooksConfigModel {
    /// Webhooks subscriptions configuration. You could have a webhook configuration for testing and other for production purpose.
    #[serde(
        rename = "webhooksConfiguration",
        skip_serializing_if = "Option::is_none"
    )]
    pub webhooks_configuration: Option<Vec<models::WebhookConfiguration>>,
}

impl WebhooksConfigModel {
    /// Webhooks Config Schema to set url for receiving news about shipping orders.  The endpoint will look like: https://your_callback_url/ Header authorization: your_security_key (optional) Topics to be subscribed.
    pub fn new() -> WebhooksConfigModel {
        WebhooksConfigModel {
            webhooks_configuration: None,
        }
    }
}
